{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/create/create.component.css","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/create/form/form.component.css","webpack:///./src/app/components/create/form/form.component.html","webpack:///./src/app/components/create/form/form.component.ts","webpack:///./src/app/components/edit/edit.component.css","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/list/dialograte/dialograte.component.css","webpack:///./src/app/components/list/dialograte/dialograte.component.html","webpack:///./src/app/components/list/dialograte/dialograte.component.ts","webpack:///./src/app/components/list/list.component.css","webpack:///./src/app/components/list/list.component.html","webpack:///./src/app/components/list/list.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/notfound/notfound.component.css","webpack:///./src/app/components/notfound/notfound.component.html","webpack:///./src/app/components/notfound/notfound.component.ts","webpack:///./src/app/foods.service.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"main {\\n  width: 30%;\\n  margin: auto;\\n}\\n\"","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FoodsService } from './foods.service';\nimport { UserService } from './user.service';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Project-titan';\n  /* foods: any;\n  path = 'http://localhost:3000/p'; */\n\n  constructor(private http: HttpClient) {\n\n  }\n  ngOnInit () {\n    // this.getPosts();\n  }\n\n  /* someMethod() {\n    return this.http.get(this.path).pipe(map(res => {\n      return res;\n    }));\n  }\n\n  getPosts() {\n    this.someMethod().subscribe(data => this.foods = data);\n  }\n */\n\n\n\n\n  /* getPosts() {\n    return this.http.get('http://localhost:3000/p').subscribe((data) => {\n      console.log('food: ');\n      console.log(this.foods);\n      console.log('data: ');\n      console.log(data);\n    });\n  } */\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { enableProdMode } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport {\n  MatInputModule,\n  MatCardModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatExpansionModule,\n  MatIconModule,\n  MatDialogModule,\n  MatMenuModule,\n  MatSidenavModule,\n  MatListModule,\n  MatSelectModule,\n  MatCheckboxModule\n} from '@angular/material';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\n\nimport { FoodsService } from './foods.service';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { CreateComponent } from './components/create/create.component';\nimport { EditComponent } from './components/edit/edit.component';\nimport { ListComponent } from './components/list/list.component';\nimport { NotfoundComponent } from './components/notfound/notfound.component';\nimport { FormComponent } from './components/create/form/form.component';\nimport { DialograteComponent } from './components/list/dialograte/dialograte.component';\nimport { LoginComponent } from './components/login/login.component';\n\nenableProdMode();\n\nconst routes: Routes = [\n  { path: 'create', component: CreateComponent },\n  { path: 'edit/:id', component: EditComponent },\n  { path: 'list', component: ListComponent },\n  { path: 'login', component: LoginComponent },\n  { path: '', redirectTo: 'list', pathMatch: 'full' }, // home\n  { path: '**', component: NotfoundComponent },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    CreateComponent,\n    EditComponent,\n    ListComponent,\n    NotfoundComponent,\n    FormComponent,\n    DialograteComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    FormsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    RouterModule.forRoot(routes),\n    HttpClientModule,\n    MatIconModule,\n    MatMenuModule,\n    LayoutModule,\n    MatSidenavModule,\n    MatListModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatCheckboxModule,\n\n    AngularFireModule.initializeApp(\n      // Initialize Firebase\n      {\n        apiKey: 'AIzaSyAw6HRPPUD0LCNVP4thQJWtik_yF1SjMDY',\n        authDomain: 'starsipe-8cb0e.firebaseapp.com',\n        databaseURL: 'https://starsipe-8cb0e.firebaseio.com',\n        projectId: 'starsipe-8cb0e',\n        storageBucket: 'starsipe-8cb0e.appspot.com',\n        messagingSenderId: '412941641518'\n      }\n    ),\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n\n\n  ],\n  providers: [FoodsService, CookieService],\n  bootstrap: [AppComponent],\n  entryComponents: [DialograteComponent], // in order to use as dialog\n\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"list-card-wrapper\\\">\\n  <mat-card>\\n    <mat-card-header>\\n      <mat-card-title>Lägg till data</mat-card-title>\\n      <mat-card-subtitle ng-app=\\\"myApp\\\" ng-controller=\\\"datCtrl\\\">\\n        {{ today | date }}\\n      </mat-card-subtitle>\\n    </mat-card-header>\\n\\n    <app-form></app-form>\\n    \\n  </mat-card>\\n</div>\\n\\n    <script>\\n    var app = angular.module('myApp', []);\\n    app.controller('datCtrl', function($scope) {\\n        $scope.today = new Date();\\n    });\\n    </script>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  today: number = Date.now();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"@import url('https://unpkg.com/bootstrap@3.3.7/dist/css/bootstrap.min.css');\\n.ng-valid[required], .ng-valid.required  {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n.ng-invalid:not(form)  {\\n  border-left: 5px solid #a94442; /* red */\\n}\\n#rating {\\n  width: 70px;\\n}\\n#restaurant {\\n  width: 150px;\\n}\\n#successText {\\n  color: #42A948;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div [hidden]=\\\"submitted\\\">\\n    <h1>Ny mat</h1>\\n\\n    <div [hidden]=\\\"!success || submitted\\\">\\n        <h4 id=\\\"successText\\\">Successfully submitted to the database</h4>\\n    </div>\\n\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #foodForm=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"_name\\\">Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\"\\n               autocomplete=\\\"off\\\"\\n               autofocus\\n               required\\n               [(ngModel)]=\\\"_name\\\" name=\\\"name\\\"\\n               #name=\\\"ngModel\\\">\\n        <div [hidden]=\\\"name.valid || name.pristine\\\"\\n             class=\\\"alert alert-danger\\\" > <!-- Class => Design of red box-->\\n          Name is required\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"_rating\\\">Rating</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"rating\\\"\\n                required\\n                min=\\\"0\\\" max=\\\"10\\\" step=\\\"1\\\"\\n               [(ngModel)]=\\\"_rating\\\" name=\\\"rating\\\"\\n               oninput=\\\"validity.valid||(value='');\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"_restaurant\\\">Restaurant</label>\\n        <br>\\n        <mat-select class=\\\"form-control\\\" required\\n        [(ngModel)]=\\\"_restaurant\\\" name=\\\"restaurant\\\" id=\\\"restaurant\\\">\\n          <mat-option value=Mocado>Mocado</mat-option>\\n          <mat-option value=Sukaldari>Sukaldari</mat-option>\\n          <mat-option value=Kebabhuset>Kebabhuset</mat-option>\\n          <mat-option value=Foodtruck>Foodtruck</mat-option>\\n        </mat-select>\\n        <br>\\n        <br>\\n        <label>Always available? </label>\\n        <mat-checkbox\\n        [(ngModel)]=\\\"_available\\\" name=\\\"available\\\" id=\\\"available\\\"></mat-checkbox>\\n      </div>\\n\\n      <button type=\\\"submit\\\"\\n      class=\\\"btn btn-success\\\"\\n      [disabled]=\\\"!foodForm.form.valid\\\">Submit</button>\\n    </form>\\n\\n  </div>\\n\\n  <div [hidden]=\\\"!submitted\\\">\\n    <h2>You submitted the following:</h2>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-3\\\">Name</div>\\n      <div class=\\\"col-xs-9\\\">{{ _name }}</div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-3\\\">Rating</div>\\n      <div class=\\\"col-xs-9\\\">{{ _rating }}</div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-3\\\">Restaurant</div>\\n        <div class=\\\"col-xs-9\\\">{{ _restaurant }}</div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-3\\\">Is available everyday?</div>\\n        <div class=\\\"col-xs-9\\\">{{ _available }}</div>\\n    </div>\\n    <br>\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"submitted=false\\\">Edit</button>\\n\\n    <button (click)=\\\"finalSubmit()\\\" class=\\\"btn btn-success\\\">Confirm</button>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FoodsService } from '../../../foods.service';\n\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent {\n\n  _name = '';\n  _rating;\n  _restaurant = '';\n  _available = false;\n\n  submitted = false;\n  success = false;\n\n  constructor(private myService: FoodsService) {}\n\n  onSubmit() {\n    this.submitted = true;\n    this.success = false;\n  }\n\n  finalSubmit() {\n    this.addToDB();\n    this.success = true;\n    this.submitted = false;\n    this._name = '';\n    this._rating = null;\n    this._restaurant = '';\n  }\n\n  addToDB() {\n    // console.log(this._name);\n    // console.log(this._rating);\n    // console.log(' added to database');\n    this.myService.submitData(\n      this._name,\n      this._rating,\n      this._restaurant,\n      this._available);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"list-card-wrapper\\\">\\n  <mat-card>\\n    <mat-card-header>\\n      <mat-card-title>Dagens topp 10</mat-card-title>\\n      <mat-card-subtitle ng-app=\\\"myApp\\\" ng-controller=\\\"datCtrl\\\">\\n        {{ today | date }}\\n      </mat-card-subtitle>\\n    </mat-card-header>\\n\\n    <mat-card-actions>\\n      <button mat-button>LIKE</button>\\n      <button mat-button>SHARE</button>\\n    </mat-card-actions>\\n  </mat-card>\\n</div>\\n\\n    <script>\\n    var app = angular.module('myApp', []);\\n    app.controller('datCtrl', function($scope) {\\n        $scope.today = new Date();\\n    });\\n    </script>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  today: number = Date.now(); // Dagens datum\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"@import url('https://unpkg.com/bootstrap@3.3.7/dist/css/bootstrap.min.css');\\n.ng-valid[required], .ng-valid.required  {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n.ng-invalid:not(form)  {\\n  border-left: 5px solid #a94442; /* red */\\n}\\n#rating {\\n  width: 70px;\\n}\\n#successText {\\n  color: #42A948;\\n}\\n\"","module.exports = \"<h1 mat-dialog-title>Rate this food</h1>\\n<div mat-dialog-content>\\n    <div [hidden]=\\\"!submitted\\\">\\n        <h4 id=\\\"successText\\\">Successfully submitted your rating</h4>\\n    </div>\\n\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #foodForm=\\\"ngForm\\\" >\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"_rating\\\">Rating</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"rating\\\"\\n                required\\n                min=\\\"0\\\" max=\\\"10\\\" step=\\\"1\\\"\\n               [(ngModel)]=\\\"_rating\\\" name=\\\"rating\\\"\\n               oninput=\\\"validity.valid||(value='');\\\">\\n      </div>\\n      <button type=\\\"submit\\\"\\n      class=\\\"btn btn-success\\\"\\n      [disabled]=\\\"!foodForm.form.valid || submitted\\\">Submit</button>\\n    </form>\\n  </div>\\n\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { FoodsService } from '../../../foods.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Component({\n  selector: 'app-dialograte',\n  templateUrl: './dialograte.component.html',\n  styleUrls: ['./dialograte.component.css']\n})\nexport class DialograteComponent implements OnInit {\n\n  cookieValue: String;\n  _rating: number;\n  food;\n\n  submitted = false;\n\n  constructor(\n    private myService: FoodsService,\n   @Inject(MAT_DIALOG_DATA) data, \n   private cookieService: CookieService) {\n    this.food = data;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.myService.addRating(this._rating, this.food);\n    this.onRate();\n  }\n\n  ngOnInit() {\n    this.cookieValue = this.cookieService.get(this.food._id);\n    if (this.cookieValue == \"1\"){\n      this.submitted=true;\n      //this.submitted == false;\n    }\n  }\n  onRate(){\n    this.cookieService.set( this.food._id , '1' );\n    this.cookieValue = this.cookieService.get(this.food._id);\n    if (this.cookieValue == \"1\"){\n      this.submitted=true;\n    }\n  }\n  clearCookies(){\n    this.cookieService.set( this.food._id, '0' );\n    this.cookieValue = this.cookieService.get(this.food._id);\n    this.submitted=false;\n    }\n}\n","module.exports = \".list-card-wrapper {\\n  width:98%;\\n  margin: auto;\\n /* display: block;*/\\n  border: 1px solid black;\\n  /*margin: auto;*/\\n}\\n\\n.list-card{\\n  /*border: 2px solid red;*/\\n  float: left;\\n  width: 30%;\\n  margin: 15px;\\n}\\n\\n.list-card-trucks{\\n  /*border: 2px solid red;*/\\n  /*float: left;*/\\n  width: 100%;\\n  margin: auto;\\n}\\n\\n.list-card-wrapper-trucks{\\n  border: 2px solid red;\\n  display: inline-flex;\\n  /*float: left;*/\\n  width: 100%;\\n  margin: auto;\\n}\\n\\n.list-title {\\n  text-align: center;\\n}\\n\\n.right {\\n  float: right;\\n  padding: 5px;\\n}\\n\\n.food-card {\\n  width: 90%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n}\\n\\n.food-card:hover {\\n /* width: 50%;\\n  margin: auto;\\n  margin-bottom: 20px;*/\\n  background-color: bisque;\\n}\\n\\n@media only screen and (max-width: 600px) {\\n  .list-card-wrapper {\\n    width: 90%;\\n    margin: auto;\\n  }\\n  .food-card {\\n    width: 90%;\\n    margin: auto;\\n    margin-bottom: 20px;\\n  }\\n  .food-card:hover {\\n    width: 90%;\\n  }\\n}\\n\\n\"","module.exports = \"<div class=\\\"list-card-wrapper\\\">\\n  <div class=\\\"list-card\\\">\\n    <mat-card>\\n      <mat-card-header>\\n        <mat-card-title>Zenit</mat-card-title>\\n        <mat-card-subtitle ng-app=\\\"myApp\\\" ng-controller=\\\"datCtrl\\\">\\n          {{ today | date }}\\n        </mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card *ngFor=\\\"let food of zenitFoods\\\" class=\\\"food-card\\\">\\n          <mat-card-subtitle>\\n              {{food.restaurant}}\\n          </mat-card-subtitle>\\n        <span>{{food.name}}</span>\\n        <mat-icon class=\\\"right\\\">favorite</mat-icon>\\n        <span *ngIf=\\\"food.ratingAvg != 0\\\" class=\\\"right\\\">{{food.ratingAvg | number : '1.1-1'}}</span>\\n        <span *ngIf=\\\"food.ratingAvg == 0\\\" class=\\\"right\\\">-</span>\\n        <mat-card-actions>\\n            <button mat-button [disabled]=\\\"rated(food._id)\\\" (click)=\\\"openRateDialog(food)\\\">RATE</button>\\n          </mat-card-actions>\\n      </mat-card>\\n    </mat-card>\\n  </div>\\n\\n  <div class=\\\"list-card\\\">\\n    <mat-card>\\n      <mat-card-header>\\n        <mat-card-title>Dagens topp 10</mat-card-title>\\n        <mat-card-subtitle ng-app=\\\"myApp\\\" ng-controller=\\\"datCtrl\\\">\\n          {{ today | date }}\\n        </mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card *ngFor=\\\"let food of foods\\\" class=\\\"food-card\\\">\\n          <mat-card-subtitle>\\n              {{food.restaurant}}\\n          </mat-card-subtitle>\\n        <span>{{food.name}}</span>\\n        <mat-icon class=\\\"right\\\">favorite</mat-icon>\\n        <span class=\\\"right\\\">{{food.ratingAvg | number : '1.1-1'}}</span>\\n        <span *ngIf=\\\"food.available == false\\\" class=\\\"right\\\"><b style=\\\"color:red\\\">Not available</b></span>\\n        <mat-card-actions>\\n            <button mat-button [disabled]=\\\"rated(food._id)\\\" (click)=\\\"openRateDialog(food)\\\">RATE</button>\\n          </mat-card-actions>\\n      </mat-card>\\n    </mat-card>\\n  </div>\\n\\n  <div class=\\\"list-card\\\">\\n    <mat-card>\\n      <mat-card-header>\\n        <mat-card-title>Kårallen</mat-card-title>\\n        <mat-card-subtitle ng-app=\\\"myApp\\\" ng-controller=\\\"datCtrl\\\">\\n          {{ today | date }}\\n        </mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card *ngFor=\\\"let food of karallenFoods\\\" class=\\\"food-card\\\">\\n         <mat-card-subtitle>\\n              {{food.restaurant}}\\n          </mat-card-subtitle>\\n        <span>{{food.name}}</span>\\n        <mat-icon class=\\\"right\\\">favorite</mat-icon>\\n        <span *ngIf=\\\"food.ratingAvg != 0\\\" class=\\\"right\\\">{{food.ratingAvg | number : '1.1-1'}}</span>\\n        <span *ngIf=\\\"food.ratingAvg == 0\\\" class=\\\"right\\\">-</span>\\n        <mat-card-actions>\\n            <button mat-button [disabled]=\\\"rated(food._id)\\\" (click)=\\\"openRateDialog(food)\\\">RATE</button>\\n          </mat-card-actions>\\n      </mat-card>\\n    </mat-card>\\n  </div>\\n\\n<div class=\\\"list-card-wrapper-trucks\\\">\\n  <mat-card class=\\\"list-card-trucks\\\">\\n    <mat-card-header>\\n      <mat-card-title>Dagens Foodtrucks</mat-card-title>\\n        <mat-card-subtitle ng-app=\\\"myApp\\\" ng-controller=\\\"datCtrl\\\">\\n            {{ today | date }}\\n        </mat-card-subtitle>\\n      </mat-card-header>\\n      <div *ngFor=\\\"let truck of [\\n      foodTruckFoods,\\n      mocadoFoods,\\n      kebabHusetFoods]\\\" class=\\\"list-card\\\">\\n        <mat-card>\\n          <mat-card-header>\\n            <mat-card-title>{{truck[0].restaurant}}</mat-card-title>\\n            <mat-card-subtitle ng-app=\\\"myApp\\\" ng-controller=\\\"datCtrl\\\">\\n             {{ today | date }}\\n            </mat-card-subtitle>\\n          </mat-card-header>\\n          <mat-card *ngFor=\\\"let food of truck\\\" class=\\\"food-card\\\">\\n            <mat-card-subtitle>\\n                  {{food.restaurant}}\\n              </mat-card-subtitle>\\n            <span>{{food.name}}</span>\\n            <mat-icon class=\\\"right\\\">favorite</mat-icon>\\n            <span *ngIf=\\\"food.ratingAvg != 0\\\" class=\\\"right\\\">{{food.ratingAvg | number : '1.1-1'}}</span>\\n            <span *ngIf=\\\"food.ratingAvg == 0\\\" class=\\\"right\\\">-</span>\\n            <mat-card-actions>\\n                <button mat-button [disabled]=\\\"rated(food._id)\\\" (click)=\\\"openRateDialog(food)\\\">RATE</button>\\n            </mat-card-actions>\\n          </mat-card>\\n        </mat-card>\\n      </div>\\n  </mat-card>\\n</div>\\n\\n  </div>\\n\\n    <script>\\n    var app = angular.module('myApp', []);\\n    app.controller('datCtrl', function($scope) {\\n        $scope.today = new Date();\\n    });\\n    </script>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FoodsService } from '../../foods.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport {DialograteComponent} from './dialograte/dialograte.component';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  cookieValue: String;\n  hasRated: boolean;\n\n  today: number = Date.now();\n  \n  foods: any;\n  karallenFoods: any;\n  zenitFoods: any;\n  foodTruckFoods: any;\n  mocadoFoods: any;\n  kebabHusetFoods: any;\n\n  constructor(private myService: FoodsService,\n   public dialog: MatDialog,\n   private cookieService: CookieService) {\n  }\n\n  ngOnInit () {\n    this.getData();\n  }\n\n  openRateDialog(foodObj): void {\n    const dialog = this.dialog.open(DialograteComponent, {\n      width: '250px',\n      data: foodObj\n    });\n\n    dialog.afterClosed().subscribe(() => {\n      console.log('dialog closed');\n      this.getData(); // refresh data\n    });\n  }\n\n  getData() {\n    this.myService.getTop10().subscribe(data => this.foods = data); // Hämtar data från Service\n    this.myService.getKarallen().subscribe(data => this.karallenFoods = data); // Hämtar data från Service\n    this.myService.getZenit().subscribe(data => this.zenitFoods = data); // Hämtar data från Service\n    this.myService.getFoodtruck().subscribe(data => this.foodTruckFoods = data); // Hämtar data från Service\n    this.myService.getMocado().subscribe(data => this.mocadoFoods = data); // Hämtar data från Service\n    this.myService.getKebabHuset().subscribe(data => this.kebabHusetFoods = data); // Hämtar data från Service\n\n  }\n\n  rated(foodId){\n    //return false;\n    this.cookieValue = this.cookieService.get(foodId);\n    if (this.cookieValue == \"1\"){\n       return true;\n    } else {\n      return false;\n    }\n  }\n}","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"user.uid | async as uid; else login\\\">\\n\\n  The user is logged in {{uid}}\\n  <div *ngIf=\\\"user.isAdmin | async\\\">\\n    The user is admin\\n  </div>\\n  <div>\\n    <button (click)=\\\"user.logout()\\\">Logout</button>\\n  </div>\\n</div>\\n<ng-template #login>\\n  You need to login: <button (click)=\\\"user.login()\\\">Login</button>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../user.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public user: UserService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  notfound works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// Service for passing data to node and mongodb\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoodsService {\n\n  top10Path = 'http://localhost:3000/getTop10';\n  karallenPath = 'http://217.210.174.92:3000/getKarallen';\n  zenitPath = 'http://0.0.0.0:3000/getZenit';\n  foodTruckPath = 'http://localhost:3000/getFoodTruck';\n  mocadoPath = 'http://localhost:3000/getMocado';\n  kebabHusetPath = 'http://localhost:3000/getKebabHuset';\n\n  foods: any;\n\n  constructor(private http: HttpClient) {}\n\n  getTop10() {\n    return this.http.get(this.top10Path).pipe(map(res => {\n      return res;\n    }));\n  }\n  getKarallen() {\n    return this.http.get(this.karallenPath).pipe(map(res => {\n      return res;\n    }));\n  }\n  getZenit() {\n    return this.http.get(this.zenitPath).pipe(map(res => {\n      return res;\n    }));\n  }\n  getFoodtruck() {\n    return this.http.get(this.foodTruckPath).pipe(map(res => {\n        return res;\n    }));\n  }\n  getMocado() {\n    return this.http.get(this.mocadoPath).pipe(map(res => {\n        return res;\n    }));\n  }\n  getKebabHuset() {\n    return this.http.get(this.kebabHusetPath).pipe(map(res => {\n        return res;\n    }));\n  }\n  \n\n  submitData(name, rating, restaurant, available) {\n\n    this.http.post('http://217.210.174.92:3000/create',\n    {\n      name: name,\n      rating: rating,\n      restaurant: restaurant,\n      available: available,\n\n    }).subscribe(\n       (res) => {\n          console.log(res);\n        },\n          err => console.log(err)\n        );\n  }\n\n  addRating (rating, food_data ) {\n    this.http.post('http://localhost:3000/addRating',\n    {\n      rating: rating,\n      id: food_data._id,\n      ratingAvg: food_data.ratingAvg,\n      restaurant: food_data.restaurant,\n      name: food_data.name,\n\n    })\n      .subscribe(\n        (res) => {\n          console.log(res);\n        },\n          err => console.log(err)\n        );\n  }\n}\n","module.exports = \".example-spacer {\\n  flex: 1 1 auto;\\n}\\n\\nmat-toolbar a {\\n  display: inline-block;\\n  margin: 0 10px;\\n  color: white;\\n  text-decoration: none;\\n}\\n\\nmat-toolbar a:hover {\\n  color: darkviolet;\\n}\\n\\n.centrera {\\n  width: 30%;\\n  margin: auto;\\n}\\n\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <a routerLink=\\\"/\\\">Project Titan</a>\\n  <div class=\\\"centrera\\\" >\\n    <a routerLink=\\\"/create\\\">Create</a>\\n    <a routerLink=\\\"/list\\\">List</a>\\n    <a routerLink=\\\"/login\\\">Login</a>\\n  </div>\\n</mat-toolbar>\\n\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","import { Injectable } from '@angular/core';\nimport { of as observableOf, Observable } from 'rxjs';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { map, switchMap } from 'rxjs/operators';\nimport { auth } from 'firebase';\nimport { AngularFireDatabase } from 'angularfire2/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  uid = this.afAuth.authState.pipe(\n    map(authState => {\n      if (!authState) {\n        return null;\n      } else {\n        return authState.uid;\n      }\n    })\n  );\n  isAdmin: Observable<boolean> = this.uid.pipe(\n    switchMap(uid => {\n      if (!uid) {\n        return observableOf(false);\n      } else {\n        return this.db.object<boolean>('/admin/' + uid).valueChanges();\n      }\n    })\n  );\n\n  constructor(private afAuth: AngularFireAuth, private db: AngularFireDatabase ) {}\n\n  login() {\n    this.afAuth.auth.signInWithPopup(new auth.GoogleAuthProvider());\n  }\n  logout() {\n    this.afAuth.auth.signOut();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}